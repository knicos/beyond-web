version: "3.4"
services:
  client:
    image: app.ftlab.utu.fi/app-client:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.client
    ports:
      - "8080:8080"
    environment:
      FTL_SOCKET_SERVICE: socketservice:8080
      FTL_AUTH_SERVICE: authservice:8080
      FTL_NODE_SERVICE: nodeservice:8080
      FTL_STREAM_SERVICE: streamservice:8080
      FTL_RECORDER_SERVICE: recorderservice:8080
    depends_on:
      - socketservice
      - authservice
      - nodeservice
      - streamservice
      - recorderservice
    volumes:
      - ./packages/client/dist:/usr/share/nginx/html
  socketservice:
    image: app.ftlab.utu.fi/app-socketservice:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.services
      target: socketservice
    environment:
      NODE_ENV: development
      REDIS_HOST: redis
    depends_on:
      - redis
      - authmongo
    volumes:
      - ./:/usr/src/app
  authservice:
    image: app.ftlab.utu.fi/app-authservice:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.services
      target: authservice
    environment:
      NODE_ENV: development
      REDIS_HOST: redis
      MONGO_HOST: authmongo
    depends_on:
      - redis
      - authmongo
    volumes:
      - ./:/usr/src/app
  nodeservice:
    image: app.ftlab.utu.fi/app-nodeservice:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.services
      target: nodeservice
    environment:
      NODE_ENV: development
      REDIS_HOST: redis
      MONGO_HOST: authmongo
    depends_on:
      - redis
      - authmongo
    volumes:
      - ./:/usr/src/app
  recorderservice:
    image: app.ftlab.utu.fi/app-recorderservice:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.services
      target: recorderservice
    environment:
      NODE_ENV: development
      REDIS_HOST: redis
    depends_on:
      - redis
      - authmongo
    volumes:
      - ./:/usr/src/app
      - "$HOME/ftl-data:/data/ftl"
  streamservice:
    image: app.ftlab.utu.fi/app-streamservice:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.services
      target: streamservice
    environment:
      NODE_ENV: development
      REDIS_HOST: redis
      MONGO_HOST: authmongo
    depends_on:
      - redis
      - authmongo
    volumes:
      - ./:/usr/src/app
      
  authmongo:
    image: mongo:4.2
    ports:
      - "27017:27017"

  redis:
    image: redis/redis-stack-server:latest
    volumes:
      - ./.data:/data
    command: redis-stack-server --maxmemory 200mb --save "300 1" --appendonly no
