image:
  name: docker/compose
  entrypoint: [""]

stages:
  - build
  - test
  - deploy

client_build:
  stage: build
  only:
    - master
    - merge_requests
  tags:
    - docker
    - git
  script:
    - docker build -t webapp-client --build-arg CLIENT_ID=615417781b5701158c4997ba --build-arg CLIENT_SECRET=l7FNrUMa3ILzi3qiyo5J44wVGC40YTBx --target build -f ./docker/Dockerfile.client .
    - mkdir image
    - docker save webapp-client | gzip > image/client.tar.gz
  artifacts:
    paths:
      - image

service_build:
  stage: build
  only:
    - master
    - merge_requests
  tags:
    - docker
    - git
  script:
    - docker build -t webapp-service --target build -f ./docker/Dockerfile.services .
    - mkdir image
  #  - docker save webapp-service | gzip > image/service.tar.gz

  #artifacts:
  #  paths:
  #    - image

service_test:
  stage: test
  only:
    - master
    - merge_requests
  tags:
    - docker
    - git
  needs: ["service_build"]
  script:
    #- docker load -i image/service.tar.gz
    - docker-compose -f ./docker/test/docker-compose.yml run test-service yarn test --skip-nx-cache

client_test:
  stage: test
  only:
    - master
    - merge_requests
  tags:
    - docker
    - git
  needs: ["client_build"]
  script:
    - docker load -i image/client.tar.gz
    - docker run webapp-client yarn test

#latest_deploy:
#  stage: deploy
#  tags:
#    - docker
#    - git
#  environment:
#    name: production
#    url: https://app.ftlab.utu.fi
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#      when: manual
#  needs: ["service_build","client_build","service_test","client_test"]
#  variables:
#    DOCKER_USER: $DOCKER_USER
#    DOCKER_PASSWORD: $DOCKER_PASSWORD
#  script:
#    - docker load -i image/service.tar.gz
#    - docker load -i image/client.tar.gz
#    - COMPOSE_DOCKER_CLI_BUILD=1 docker-compose build --build-arg CLIENT_ID=615417781b5701158c4997ba --build-arg CLIENT_SECRET=l7FNrUMa3ILzi3qiyo5J44wVGC40YTBx
#    - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin app.ftlab.utu.fi
#    - docker-compose push

deploy_client:
  stage: deploy
  tags:
    - docker
    - git
  environment:
    name: client_production
    url: https://app.ftlab.utu.fi
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
  needs: ["client_build","client_test"]
  variables:
    DOCKER_USER: $DOCKER_USER
    DOCKER_PASSWORD: $DOCKER_PASSWORD
  script:
    - docker load -i image/client.tar.gz
    - docker build -t app.ftlab.utu.fi/app-client:latest -f ./docker/Dockerfile.client --build-arg CLIENT_ID=615417781b5701158c4997ba --build-arg CLIENT_SECRET=l7FNrUMa3ILzi3qiyo5J44wVGC40YTBx .
    - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin app.ftlab.utu.fi
    - docker push app.ftlab.utu.fi/app-client:latest

.service_deploy:
  stage: deploy
  tags:
    - docker
    - git
  environment:
    name: $ENV_NAME
    url: https://app.ftlab.utu.fi
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
  needs: ["service_build","service_test"]
  variables:
    DOCKER_USER: $DOCKER_USER
    DOCKER_PASSWORD: $DOCKER_PASSWORD
  script:
    # - docker load -i image/service.tar.gz
    - docker build -t app.ftlab.utu.fi/app-$SERVICE_NAME:latest -f ./docker/Dockerfile.services --target $SERVICE_NAME .
    - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin app.ftlab.utu.fi
    - docker push app.ftlab.utu.fi/app-$SERVICE_NAME:latest

deploy_auth:
  variables:
    ENV_NAME: auth_production
    SERVICE_NAME: authservice
  extends: .service_deploy

deploy_socket:
  variables:
    ENV_NAME: socket_production
    SERVICE_NAME: socketservice
  extends: .service_deploy

deploy_node:
  variables:
    ENV_NAME: node_production
    SERVICE_NAME: nodeservice
  extends: .service_deploy

deploy_stream:
  variables:
    ENV_NAME: stream_production
    SERVICE_NAME: streamservice
  extends: .service_deploy

deploy_record:
  variables:
    ENV_NAME: recorder_production
    SERVICE_NAME: recorderservice
  extends: .service_deploy

deploy_playback:
  variables:
    ENV_NAME: playback_production
    SERVICE_NAME: playbackservice
  extends: .service_deploy

deploy_diagnostic:
  variables:
    ENV_NAME: diagnostic_production
    SERVICE_NAME: diagnosticservice
  extends: .service_deploy

deploy_sketchpad:
  variables:
    ENV_NAME: whiteboard_production
    SERVICE_NAME: whiteboardservice
  extends: .service_deploy

#tag_deploy:
#  stage: deploy
#  tags:
#    - docker
#    - git
#  only:
#    - tags
#  environment:
#    name: production
#    url: https://app.ftlab.utu.fi
#  needs: ["service_build","client_build","service_test","client_test"]
#  variables:
#    DOCKER_USER: $DOCKER_USER
#    DOCKER_PASSWORD: $DOCKER_PASSWORD
#  script:
#    - docker load -i image/service.tar.gz
#    - docker load -i image/client.tar.gz
#    - TAG="$CI_COMMIT_TAG" COMPOSE_DOCKER_CLI_BUILD=1 docker-compose build --build-arg CLIENT_ID=615417781b5701158c4997ba --build-arg CLIENT_SECRET=l7FNrUMa3ILzi3qiyo5J44wVGC40YTBx
#    - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin app.ftlab.utu.fi
#    - docker-compose push
